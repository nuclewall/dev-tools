Index: sys/contrib/pf/net/pf.c
===================================================================
RCS file: /root/freebsd/repo/src/sys/contrib/pf/net/pf.c,v
retrieving revision 1.9
diff -u -r1.9 pf.c
--- sys/contrib/pf/net/pf.c	8 Feb 2011 15:19:28 -0000	1.9
+++ sys/contrib/pf/net/pf.c	8 Feb 2011 18:18:05 -0000
@@ -6652,6 +6652,14 @@
 	if (oifp != ifp) {
 		if (in_broadcast(ip->ip_dst, oifp)) /* XXX: LOCKING of address list?! */
 			goto donelocal;
+
+		if (s && r->rt == PF_ROUTETO && pd->nat_rule != NULL &&
+		    r->direction == PF_OUT && r->direction == dir && pd->pf_mtag->routed < 2) {
+			int off = ip->ip_hl << 2;
+			PACKET_UNDO_NAT(m0, (*pd), s, dir);
+			pf_unlink_state(s);
+			pd->pf_mtag->flags |= PF_TAG_FRIENDLY;
+		}
 #ifdef __FreeBSD__
 		PF_UNLOCK();
 		if (pf_test(PF_OUT, ifp, &m0, NULL, NULL) != PF_PASS) {
@@ -7779,7 +7787,8 @@
 		action = PF_PASS;
 	} else if (r->rt &&
 		/* Check to avoid breaking ipfw forward rules needed on CP and proxies listening on loclhost*/
-		!((m->m_flags & M_FASTFWD_OURS) || (pd.pf_mtag->flags & PF_TAG_TRANSLATE_LOCALHOST)))
+		!((m->m_flags & M_FASTFWD_OURS) || (pd.pf_mtag->flags & PF_TAG_TRANSLATE_LOCALHOST) ||
+		(pd.pf_mtag->flags & PF_TAG_FRIENDLY)))
 		/* pf_route can free the mbuf causing *m0 to become NULL */
 		pf_route(m0, r, dir, ifp, s, &pd);
 
Index: sys/contrib/pf/net/pf_mtag.h
===================================================================
RCS file: /root/freebsd/repo/src/sys/contrib/pf/net/pf_mtag.h,v
retrieving revision 1.3
diff -u -r1.3 pf_mtag.h
--- sys/contrib/pf/net/pf_mtag.h	8 Feb 2011 15:16:38 -0000	1.3
+++ sys/contrib/pf/net/pf_mtag.h	8 Feb 2011 15:21:51 -0000
@@ -39,6 +39,7 @@
 #define	PF_TAG_TRANSLATE_LOCALHOST	0x04
 #define PF_PACKET_LOOPED	        0x08
 #define PF_FASTFWD_OURS_PRESENT         0x10
+#define PF_TAG_FRIENDLY			0x20
 
 struct pf_mtag {
 	void		*hdr;		/* saved hdr pos in mbuf, for ECN */
