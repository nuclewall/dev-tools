Index: sys/net/if.c
===================================================================
RCS file: /root/freebsd/test/repo/src/sys/net/if.c,v
retrieving revision 1.2
diff -u -r1.2 if.c
--- sys/net/if.c	4 Jun 2010 18:12:36 -0000	1.2
+++ sys/net/if.c	4 Jun 2010 18:16:48 -0000
@@ -1637,7 +1637,7 @@
  * is most specific found.
  */
 struct ifaddr *
-ifa_ifwithnet(struct sockaddr *addr)
+ifa_ifwithnet(struct sockaddr *addr, int ignore_ptp)
 {
 	struct ifnet *ifp;
 	struct ifaddr *ifa;
@@ -1669,7 +1669,8 @@
 
 			if (ifa->ifa_addr->sa_family != af)
 next:				continue;
-			if (af == AF_INET && ifp->if_flags & IFF_POINTOPOINT) {
+			if (af == AF_INET &&
+			    ifp->if_flags & IFF_POINTOPOINT && !ignore_ptp) {
 				/*
 				 * This is a bit broken as it doesn't
 				 * take into account that the remote end may
Index: sys/net/if_var.h
===================================================================
RCS file: /root/freebsd/test/repo/src/sys/net/if_var.h,v
retrieving revision 1.1.1.1
diff -u -r1.1.1.1 if_var.h
--- sys/net/if_var.h	4 Jun 2010 18:01:27 -0000	1.1.1.1
+++ sys/net/if_var.h	4 Jun 2010 18:17:48 -0000
@@ -875,7 +875,7 @@
 int		ifa_ifwithaddr_check(struct sockaddr *);
 struct	ifaddr *ifa_ifwithbroadaddr(struct sockaddr *);
 struct	ifaddr *ifa_ifwithdstaddr(struct sockaddr *);
-struct	ifaddr *ifa_ifwithnet(struct sockaddr *);
+struct	ifaddr *ifa_ifwithnet(struct sockaddr *, int);
 struct	ifaddr *ifa_ifwithroute(int, struct sockaddr *, struct sockaddr *);
 struct	ifaddr *ifa_ifwithroute_fib(int, struct sockaddr *, struct sockaddr *, u_int);
 
Index: sys/net/route.c
===================================================================
RCS file: /root/freebsd/test/repo/src/sys/net/route.c,v
retrieving revision 1.1.1.1
diff -u -r1.1.1.1 route.c
--- sys/net/route.c	4 Jun 2010 18:01:27 -0000	1.1.1.1
+++ sys/net/route.c	4 Jun 2010 18:18:50 -0000
@@ -519,7 +519,7 @@
 	}
 
 	/* verify the gateway is directly reachable */
-	if ((ifa = ifa_ifwithnet(gateway)) == NULL) {
+	if ((ifa = ifa_ifwithnet(gateway, 0)) == NULL) {
 		error = ENETUNREACH;
 		goto out;
 	}
@@ -686,7 +686,7 @@
 		ifa = ifa_ifwithdstaddr(gateway);
 	}
 	if (ifa == NULL)
-		ifa = ifa_ifwithnet(gateway);
+		ifa = ifa_ifwithnet(gateway, 0);
 	if (ifa == NULL) {
 		struct rtentry *rt = rtalloc1_fib(gateway, 0, RTF_RNH_LOCKED, fibnum);
 		if (rt == NULL)
@@ -797,7 +797,7 @@
 	 */
 	if (info->rti_ifp == NULL && ifpaddr != NULL &&
 	    ifpaddr->sa_family == AF_LINK &&
-	    (ifa = ifa_ifwithnet(ifpaddr)) != NULL) {
+	    (ifa = ifa_ifwithnet(ifpaddr, 0)) != NULL) {
 		info->rti_ifp = ifa->ifa_ifp;
 		ifa_free(ifa);
 	}
Index: sys/net/rtsock.c
===================================================================
RCS file: /root/freebsd/test/repo/src/sys/net/rtsock.c,v
retrieving revision 1.1.1.1
diff -u -r1.1.1.1 rtsock.c
--- sys/net/rtsock.c	4 Jun 2010 18:01:27 -0000	1.1.1.1
+++ sys/net/rtsock.c	4 Jun 2010 18:22:39 -0000
@@ -55,6 +55,7 @@
 #include <net/if.h>
 #include <net/if_dl.h>
 #include <net/if_llatbl.h>
+#include <net/if_types.h>
 #include <net/netisr.h>
 #include <net/raw_cb.h>
 #include <net/route.h>
@@ -673,12 +674,22 @@
 		 * another search to retrieve the prefix route of
 		 * the local end point of the PPP link.
 		 */
-		if ((rtm->rtm_flags & RTF_ANNOUNCE) &&
-		    (rt->rt_ifp->if_flags & IFF_POINTOPOINT)) {
+		if (rtm->rtm_flags & RTF_ANNOUNCE) {
 			struct sockaddr laddr;
-			rt_maskedcopy(rt->rt_ifa->ifa_addr,
-				      &laddr,
-				      rt->rt_ifa->ifa_netmask);
+
+			if (rt->rt_ifp != NULL &&
+			    rt->rt_ifp->if_type == IFT_PROPVIRTUAL) {
+				struct ifaddr *ifa;
+
+				ifa = ifa_ifwithnet(info.rti_info[RTAX_DST], 1);
+				if (ifa != NULL)
+					rt_maskedcopy(ifa->ifa_addr,
+							&laddr,
+							ifa->ifa_netmask);
+				} else
+					rt_maskedcopy(rt->rt_ifa->ifa_addr,
+						&laddr,
+						rt->rt_ifa->ifa_netmask);
 			/* 
 			 * refactor rt and no lock operation necessary
 			 */
Index: sys/netinet/in.c
===================================================================
RCS file: /root/freebsd/test/repo/src/sys/netinet/in.c,v
retrieving revision 1.1.1.1
diff -u -r1.1.1.1 in.c
--- sys/netinet/in.c	4 Jun 2010 18:01:27 -0000	1.1.1.1
+++ sys/netinet/in.c	4 Jun 2010 18:23:55 -0000
@@ -1379,8 +1379,9 @@
 
 	/* XXX rtalloc1 should take a const param */
 	rt = rtalloc1(__DECONST(struct sockaddr *, l3addr), 0, 0);
-	if (rt == NULL || (rt->rt_flags & RTF_GATEWAY) || 
-	    ((rt->rt_ifp != ifp) && !(flags & LLE_PUB))) {
+	if (rt == NULL || (!(flags & LLE_PUB) &&
+			((rt->rt_flags & RTF_GATEWAY) ||
+			(rt->rt_ifp != ifp)))) {
 #ifdef DIAGNOSTIC
 		log(LOG_INFO, "IPv4 address: \"%s\" is not on the network\n",
 		    inet_ntoa(((const struct sockaddr_in *)l3addr)->sin_addr));
Index: sys/netinet/in_pcb.c
===================================================================
RCS file: /root/freebsd/test/repo/src/sys/netinet/in_pcb.c,v
retrieving revision 1.1.1.1
diff -u -r1.1.1.1 in_pcb.c
--- sys/netinet/in_pcb.c	4 Jun 2010 18:01:27 -0000	1.1.1.1
+++ sys/netinet/in_pcb.c	4 Jun 2010 18:25:03 -0000
@@ -590,7 +590,7 @@
 
 		ia = ifatoia(ifa_ifwithdstaddr((struct sockaddr *)sin));
 		if (ia == NULL)
-			ia = ifatoia(ifa_ifwithnet((struct sockaddr *)sin));
+			ia = ifatoia(ifa_ifwithnet((struct sockaddr *)sin, 0));
 		if (ia == NULL) {
 			error = ENETUNREACH;
 			goto done;
@@ -707,7 +707,7 @@
 
 		ia = ifatoia(ifa_ifwithdstaddr(sintosa(&sain)));
 		if (ia == NULL)
-			ia = ifatoia(ifa_ifwithnet(sintosa(&sain)));
+			ia = ifatoia(ifa_ifwithnet(sintosa(&sain), 0));
 		if (ia == NULL)
 			ia = ifatoia(ifa_ifwithaddr(sintosa(&sain)));
 
Index: sys/netinet/ip_options.c
===================================================================
RCS file: /root/freebsd/test/repo/src/sys/netinet/ip_options.c,v
retrieving revision 1.1.1.1
diff -u -r1.1.1.1 ip_options.c
--- sys/netinet/ip_options.c	4 Jun 2010 18:01:27 -0000	1.1.1.1
+++ sys/netinet/ip_options.c	4 Jun 2010 18:26:28 -0000
@@ -230,7 +230,7 @@
 #define	INA	struct in_ifaddr *
 #define	SA	struct sockaddr *
 			    if ((ia = (INA)ifa_ifwithdstaddr((SA)&ipaddr)) == NULL)
-				ia = (INA)ifa_ifwithnet((SA)&ipaddr);
+				ia = (INA)ifa_ifwithnet((SA)&ipaddr, 0);
 			} else
 /* XXX MRT 0 for routing */
 				ia = ip_rtaddr(ipaddr.sin_addr, M_GETFIB(m));
Index: sys/netinet/ip_output.c
===================================================================
RCS file: /root/freebsd/test/repo/src/sys/netinet/ip_output.c,v
retrieving revision 1.1.1.1
diff -u -r1.1.1.1 ip_output.c
--- sys/netinet/ip_output.c	4 Jun 2010 18:01:27 -0000	1.1.1.1
+++ sys/netinet/ip_output.c	4 Jun 2010 18:27:12 -0000
@@ -247,7 +247,7 @@
 		isbroadcast = 1;
 	} else if (flags & IP_ROUTETOIF) {
 		if ((ia = ifatoia(ifa_ifwithdstaddr(sintosa(dst)))) == NULL &&
-		    (ia = ifatoia(ifa_ifwithnet(sintosa(dst)))) == NULL) {
+		    (ia = ifatoia(ifa_ifwithnet(sintosa(dst), 0))) == NULL) {
 			IPSTAT_INC(ips_noroute);
 			error = ENETUNREACH;
 			goto bad;
