Index: sys/kern/uipc_sockbuf.c
===================================================================
RCS file: /root/freebsd/repo/src/sys/kern/uipc_sockbuf.c,v
retrieving revision 1.2
diff -u -r1.2 uipc_sockbuf.c
--- sys/kern/uipc_sockbuf.c	30 May 2011 12:28:53 -0000	1.2
+++ sys/kern/uipc_sockbuf.c	30 May 2011 12:32:53 -0000
@@ -531,9 +531,6 @@
 
 	SBLASTMBUFCHK(sb);
 
-	/* Remove all packet headers and mbuf tags to get a pure data chain. */
-	m_demote(m, 1);
-	
 	sbcompress(sb, m, sb->sb_mbtail);
 
 	sb->sb_lastrecord = sb->sb_mb;
Index: sys/net/if_llatbl.c
===================================================================
RCS file: /root/freebsd/repo/src/sys/net/if_llatbl.c,v
retrieving revision 1.1.1.1
diff -u -r1.1.1.1 if_llatbl.c
--- sys/net/if_llatbl.c	30 May 2011 09:43:38 -0000	1.1.1.1
+++ sys/net/if_llatbl.c	30 May 2011 12:32:53 -0000
@@ -323,7 +323,7 @@
 	LLTABLE_RUNLOCK();
 	KASSERT(llt != NULL, ("Yep, ugly hacks are bad\n"));
 
-	if (flags && LLE_CREATE)
+	if (flags & LLE_CREATE)
 		flags |= LLE_EXCLUSIVE;
 	
 	IF_AFDATA_LOCK(ifp);
@@ -337,6 +337,7 @@
 			 * LLE_DELETED flag, and reset the expiration timer
 			 */
 			bcopy(LLADDR(dl), &lle->ll_addr, ifp->if_addrlen);
+			lle->la_flags |= (flags & (LLE_PUB | LLE_PROXY));
 			lle->la_flags |= LLE_VALID;
 			lle->la_flags &= ~LLE_DELETED;
 #ifdef INET6
Index: sys/netgraph/ng_base.c
===================================================================
RCS file: /root/freebsd/repo/src/sys/netgraph/ng_base.c,v
retrieving revision 1.2
diff -u -r1.2 ng_base.c
--- sys/netgraph/ng_base.c	30 May 2011 12:21:03 -0000	1.2
+++ sys/netgraph/ng_base.c	30 May 2011 12:32:53 -0000
@@ -608,7 +608,7 @@
 	 */
 	if (type->constructor != NULL) {
 		if ((error = ng_make_node_common(type, nodepp)) == 0) {
-			if ((error = ((*type->constructor)(*nodepp)) != 0)) {
+			if ((error = ((*type->constructor)(*nodepp))) != 0) {
 				NG_NODE_UNREF(*nodepp);
 			}
 		}
Index: sys/netinet/if_ether.c
===================================================================
RCS file: /root/freebsd/repo/src/sys/netinet/if_ether.c,v
retrieving revision 1.2
diff -u -r1.2 if_ether.c
--- sys/netinet/if_ether.c	30 May 2011 12:21:38 -0000	1.2
+++ sys/netinet/if_ether.c	30 May 2011 12:32:53 -0000
@@ -188,16 +188,17 @@
 			LLE_REMREF(lle);
 			(void) llentry_free(lle);
 			ARPSTAT_INC(timeouts);
-		} 
+		} else {
 #ifdef DIAGNOSTIC
-		else {
 			struct sockaddr *l3addr = L3_ADDR(lle);
 			log(LOG_INFO, 
 			    "arptimer issue: %p, IPv4 address: \"%s\"\n", lle,
 			    inet_ntoa(
 			        ((const struct sockaddr_in *)l3addr)->sin_addr));
-		}
+		
 #endif
+			LLE_WUNLOCK(lle);
+		}
 	}
 	IF_AFDATA_UNLOCK(ifp);
 	CURVNET_RESTORE();
@@ -391,7 +392,7 @@
 		int canceled;
 
 		LLE_ADDREF(la);
-		la->la_expire = time_second + V_arpt_down;
+		la->la_expire = time_second;
 		canceled = callout_reset(&la->la_timer, hz * V_arpt_down,
 		    arptimer, la);
 		if (canceled)
Index: sys/netipsec/key.c
===================================================================
RCS file: /root/freebsd/repo/src/sys/netipsec/key.c,v
retrieving revision 1.2
diff -u -r1.2 key.c
--- sys/netipsec/key.c	30 May 2011 12:28:53 -0000	1.2
+++ sys/netipsec/key.c	30 May 2011 12:34:28 -0000
@@ -2295,6 +2295,7 @@
 	}
 
 	n = key_setdumpsp(sp, SADB_X_SPDGET, 0, mhp->msg->sadb_msg_pid);
+	KEY_FREESP(&sp);
 	if (n != NULL) {
 		m_freem(m);
 		return key_sendup_mbuf(so, n, KEY_SENDUP_ONE);
