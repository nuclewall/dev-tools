Index: sys/netinet/ip_carp.c
===================================================================
RCS file: /root/freebsd/fixipfw/repo/src/sys/netinet/ip_carp.c,v
retrieving revision 1.2
diff -u -r1.2 ip_carp.c
--- sys/netinet/ip_carp.c	20 Dec 2010 21:21:46 -0000	1.2
+++ sys/netinet/ip_carp.c	21 Dec 2010 16:14:07 -0000
@@ -117,7 +117,6 @@
 	int			 sc_naddrs;
 	int			 sc_naddrs6;
 	int			 sc_advbase;	/* seconds */
-	int			 sc_init_counter;
 	u_int64_t		 sc_counter;
 
 	/* authentication */
@@ -391,12 +390,12 @@
 		return (ENOSPC);
 	}
 	
+	sc->sc_counter = 0;
 	sc->sc_flags_backup = 0;
 	sc->sc_suppress = 0;
 	sc->sc_advbase = CARP_DFLTINTV;
 	sc->sc_vhid = -1;	/* required setting */
 	sc->sc_advskew = 0;
-	sc->sc_init_counter = 1;
 	sc->sc_naddrs = sc->sc_naddrs6 = 0; /* M_ZERO? */
 	sc->sc_imo.imo_membership = (struct in_multi **)malloc(
 	    (sizeof(struct in_multi *) * IP_MIN_MEMBERSHIPS), M_CARP,
@@ -691,7 +690,6 @@
 {
 	struct ifnet *ifp = m->m_pkthdr.rcvif;
 	struct carp_softc *sc;
-	u_int64_t tmp_counter;
 	struct timeval sc_tv, ch_tv;
 
 	/* verify that the VHID is valid on the receiving interface */
@@ -744,14 +742,20 @@
 		return;
 	}
 
-	tmp_counter = ntohl(ch->carp_counter[0]);
-	tmp_counter = tmp_counter<<32;
-	tmp_counter += ntohl(ch->carp_counter[1]);
-
-	/* XXX Replay protection goes here */
-
-	sc->sc_init_counter = 0;
-	sc->sc_counter = tmp_counter;
+	if (!bcmp(&sc->sc_counter, ch->carp_counter,
+            sizeof(ch->carp_counter))) {
+                /* Do not log duplicates from non simplex interfaces */
+                if (sc->sc_carpdev->if_flags & IFF_SIMPLEX) {
+                        CARPSTATS_INC(carps_badauth);
+                        SC2IFP(sc)->if_ierrors++;
+                        CARP_UNLOCK(ifp->if_carp);
+                        CARP_LOG("%s, replay or network loop detected.\n",
+				SC2IFP(sc)->if_xname);
+                } else
+                        CARP_UNLOCK(ifp->if_carp);
+                m_freem(m);
+                return;
+        }
 
 	sc_tv.tv_sec = sc->sc_advbase;
 	if (carp_suppress_preempt && sc->sc_advskew <  240)
@@ -828,13 +832,12 @@
 	struct m_tag *mtag;
 	struct ifnet *ifp = SC2IFP(sc);
 
-	if (sc->sc_init_counter) {
+	if (!sc->sc_counter) {
 		/* this could also be seconds since unix epoch */
 		sc->sc_counter = arc4random();
 		sc->sc_counter = sc->sc_counter << 32;
 		sc->sc_counter += arc4random();
-	} else
-		sc->sc_counter++;
+	}
 
 	ch->carp_counter[0] = htonl((sc->sc_counter>>32)&0xffffffff);
 	ch->carp_counter[1] = htonl(sc->sc_counter&0xffffffff);
