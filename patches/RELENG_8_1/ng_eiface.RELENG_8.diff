Index: sys/netgraph/ng_eiface.c
===================================================================
RCS file: /home/ncvs/src/sys/netgraph/ng_eiface.c,v
retrieving revision 1.53
diff -u -r1.53 ng_eiface.c
--- sys/netgraph/ng_eiface.c	23 Jul 2009 20:46:49 -0000	1.53
+++ sys/netgraph/ng_eiface.c	25 Jul 2009 23:09:55 -0000
@@ -42,6 +42,7 @@
 
 #include <net/if.h>
 #include <net/if_types.h>
+#include <net/if_dl.h>
 #include <net/netisr.h>
 #include <net/route.h>
 #include <net/vnet.h>
@@ -65,6 +66,13 @@
 	},
 	{
 	  NGM_EIFACE_COOKIE,
+	  NGM_EIFACE_SET_IFNAME,
+	  "setifname",
+	  &ng_parse_string_type,
+	  NULL
+	},
+	{
+	  NGM_EIFACE_COOKIE,
 	  NGM_EIFACE_SET,
 	  "set",
 	  &ng_parse_enaddr_type,
@@ -418,6 +426,11 @@
 	struct ng_mesg *resp = NULL;
 	int error = 0;
 	struct ng_mesg *msg;
+	char *new_name;
+        size_t namelen, onamelen;
+        struct sockaddr_dl *sdl = NULL;
+        struct ifaddr *ifa = NULL;
+	node_p ethernode;
 
 	NGI_GET_MSG(item, msg);
 	switch (msg->header.typecookie) {
@@ -443,6 +456,46 @@
 			}
 			strlcpy(resp->data, ifp->if_xname, IFNAMSIZ);
 			break;
+		case NGM_EIFACE_SET_IFNAME:
+			new_name = (char *)msg->data;
+                        
+                	/* Deny request if interface is UP */
+                	if ((ifp->if_flags & IFF_UP) != 0) {
+                  		error = EBUSY;
+                  		break;
+                        }
+                        
+                	EVENTHANDLER_INVOKE(ifnet_departure_event, ifp);
+
+			ethernode = ng_name2noderef(node, ifp->if_xname);
+                        if (ethernode != NULL)
+                                ng_name_node(ethernode, new_name);
+
+                	strlcpy(ifp->if_xname, new_name, sizeof(ifp->if_xname));
+                	ifa = ifp->if_addr;
+                	IFA_LOCK(ifa);
+                	sdl = (struct sockaddr_dl *)ifa->ifa_addr;
+                	namelen = strlen(new_name) + 1;
+                	onamelen = sdl->sdl_nlen;
+                	/*
+                 	* Move the address if needed.  This is safe because we
+                 	* allocate space for a name of length IFNAMSIZ when we
+                 	* create this in if_attach().
+                	 */
+        	        if (namelen != onamelen) {
+	                        bcopy(sdl->sdl_data + onamelen,
+                        	    sdl->sdl_data + namelen, sdl->sdl_alen);
+                	}
+        	        bcopy(new_name, sdl->sdl_data, namelen);
+	                sdl->sdl_nlen = namelen;
+                	sdl = (struct sockaddr_dl *)ifa->ifa_netmask;
+        	        bzero(sdl->sdl_data, onamelen);
+	                while (namelen != 0)
+                        	sdl->sdl_data[--namelen] = 0xff;
+                	IFA_UNLOCK(ifa);
+
+                	EVENTHANDLER_INVOKE(ifnet_arrival_event, ifp);
+			break;
 
 		case NGM_EIFACE_GET_IFADDRS:
 		    {
Index: sys/netgraph/ng_eiface.h
===================================================================
RCS file: /home/ncvs/src/sys/netgraph/ng_eiface.h,v
retrieving revision 1.9
diff -u -r1.9 ng_eiface.h
--- sys/netgraph/ng_eiface.h	3 Feb 2005 11:52:42 -0000	1.9
+++ sys/netgraph/ng_eiface.h	25 Jul 2009 23:09:55 -0000
@@ -54,6 +54,7 @@
 	NGM_EIFACE_GET_IFNAME = 1,	/* get the interface name */
 	NGM_EIFACE_GET_IFADDRS,		/* returns list of addresses */
 	NGM_EIFACE_SET,			/* set ethernet address */
+	NGM_EIFACE_SET_IFNAME,
 };
 
 #endif /* _NETGRAPH_NG_EIFACE_H_ */
Index: usr.sbin/ngctl/main.c
===================================================================
RCS file: /home/ncvs/src/usr.sbin/ngctl/main.c,v
retrieving revision 1.25
diff -u -r1.25 main.c
--- usr.sbin/ngctl/main.c	14 Jun 2009 21:39:52 -0000	1.25
+++ usr.sbin/ngctl/main.c	25 Jul 2009 23:09:55 -0000
@@ -216,7 +216,6 @@
 			continue;
 		if ((rtn = DoParseCommand(line)) != 0) {
 			warnx("line %d: error in file", num);
-			return (rtn);
 		}
 	}
 	return (CMDRTN_OK);
