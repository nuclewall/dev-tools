Index: if_vlan.c
===================================================================
RCS file: /root/freebsd/test/repo/src/sys/net/if_vlan.c,v
retrieving revision 1.1.1.1
diff -u -r1.1.1.1 if_vlan.c
--- if_vlan.c	4 Jun 2010 18:01:27 -0000	1.1.1.1
+++ if_vlan.c	4 Jun 2010 18:08:53 -0000
@@ -779,7 +779,12 @@
 	ifp->if_init = vlan_init;
 	ifp->if_start = vlan_start;
 	ifp->if_ioctl = vlan_ioctl;
-	ifp->if_snd.ifq_maxlen = ifqmaxlen;
+
+//	ifp->if_snd.ifq_maxlen = ifqmaxlen;
+        IFQ_SET_MAXLEN(&ifp->if_snd, ifqmaxlen);
+        ifp->if_snd.ifq_drv_maxlen = 0;
+        IFQ_SET_READY(&ifp->if_snd);
+
 	ifp->if_flags = VLAN_IFFLAGS;
 	ether_ifattach(ifp, eaddr);
 	/* Now undo some of the damage... */
@@ -816,6 +821,11 @@
 {
 	struct ifvlan *ifv = ifp->if_softc;
 	int unit = ifp->if_dunit;
+	int s;
+
+        s = splimp();
+        IFQ_PURGE(&ifp->if_snd);
+        splx(s);
 
 	ether_ifdetach(ifp);	/* first, remove it from system-wide lists */
 	vlan_unconfig(ifp);	/* now it can be unconfigured and freed */
@@ -850,11 +860,22 @@
 	struct mbuf *m;
 	int error;
 
+	if (ALTQ_IS_ENABLED(&ifp->if_snd)) {
+		IFQ_LOCK(&ifp->if_snd);
+		IFQ_POLL_NOLOCK(&ifp->if_snd, m);
+		if (m == NULL ) {
+			IFQ_UNLOCK(&ifp->if_snd);
+			return;
+		}
+		IFQ_UNLOCK(&ifp->if_snd);
+	}
+
 	ifv = ifp->if_softc;
 	p = PARENT(ifv);
 
 	for (;;) {
-		IF_DEQUEUE(&ifp->if_snd, m);
+		//IF_DEQUEUE(&ifp->if_snd, m);
+		IFQ_DEQUEUE(&ifp->if_snd, m);
 		if (m == NULL)
 			break;
 		BPF_MTAP(ifp, m);
@@ -1015,7 +1036,7 @@
 	/* VID numbers 0x0 and 0xFFF are reserved */
 	if (tag == 0 || tag == 0xFFF)
 		return (EINVAL);
-	if (p->if_type != IFT_ETHER)
+	if (p->if_type != IFT_ETHER && p->if_type != IFT_BRIDGE)
 		return (EPROTONOSUPPORT);
 	if ((p->if_flags & VLAN_IFFLAGS) != VLAN_IFFLAGS)
 		return (EPROTONOSUPPORT);
