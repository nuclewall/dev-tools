diff -urN src/apinger.c src/apinger.c
--- src/apinger.c	2010-10-24 15:13:38.000000000 +0200
+++ src/apinger.c	2010-10-24 15:01:15.000000000 +0200
@@ -702,9 +702,23 @@
 			r=inet_pton(AF_INET,tc->srcip,&srcaddr.addr4.sin_addr);
 			if (r){
 				srcaddr.addr.sa_family=AF_INET;
-			} else {
-				logit("Bad srcip address %s for target %s\n", tc->srcip, tc->name);
-				continue; 
+			}else{
+#ifdef HAVE_IPV6
+				r=inet_pton(AF_INET6,tc->srcip,&srcaddr.addr6.sin6_addr);
+				if (r==0){
+#endif
+					logit("Bad srcip address %s for target %s\n", tc->srcip, tc->name);
+					logit("Ignoring target %s\n",tc->name);
+					continue;
+#ifdef HAVE_IPV6
+				}
+				if (icmp6_sock<0){
+					logit("Sorry, IPv6 is not available\n");
+					logit("Ignoring target %s\n",tc->name);
+					continue;
+				}
+				srcaddr.addr.sa_family=AF_INET6;
+#endif
 			}
 			t=NEW(struct target,1);
 			memset(t,0,sizeof(struct target));
@@ -713,7 +727,8 @@
 			t->addr=addr;
 			t->ifaddr=srcaddr;
 			t->next=targets;
-			make_icmp_socket(t);
+			if(t->addr.addr.sa_family==AF_INET) make_icmp_socket(t);
+			if(t->addr.addr.sa_family==AF_INET6) make_icmp6_socket(t);
 			targets=t;
 		}
 		t->config=tc;
@@ -972,9 +987,17 @@
 		for(i=0;i<npfd;i++){
 			if (!pfd[i].revents&POLLIN) continue;
 			for(t=targets;t;t=t->next){
-				if (t->socket == pfd[i].fd) {
-					recv_icmp(t);
-					break;
+				if (t->addr.addr.sa_family==AF_INET) {
+					if (t->socket == pfd[i].fd) {
+						recv_icmp(t);
+						break;
+					}
+				}
+				if (t->addr.addr.sa_family==AF_INET6) {
+					if (t->socket == pfd[i].fd) {
+						recv_icmp6(t);
+						break;
+					}
 				}
 			}
 			pfd[i].revents=0;
diff -urN src/apinger.h src/apinger.h
--- src/apinger.h	2010-10-24 15:13:38.000000000 +0200
+++ src/apinger.h	2010-10-24 12:51:30.000000000 +0200
@@ -131,8 +131,8 @@
 void recv_icmp(struct target *t);
 void send_icmp_probe(struct target *t,int seq);
 
-int make_icmp6_socket(void);
-void recv_icmp6(void);
+int make_icmp6_socket(struct target *t);
+void recv_icmp6(struct target *t);
 void send_icmp6_probe(struct target *t,int seq);
 
 #ifdef FORKED_RECEIVER
diff -urN work/apinger-0.6.1/src/icmp6.c apinger-0.6.1/src/icmp6.c
--- src/icmp6.c	2002-12-19 09:34:16.000000000 +0100
+++ src/icmp6.c	2010-10-24 15:15:50.000000000 +0200
@@ -113,14 +113,14 @@
 	memcpy(p+1,&ti,sizeof(ti));
 	size=sizeof(*p)+sizeof(ti);
 
-	ret=sendto(icmp6_sock,p,size,MSG_DONTWAIT,
+	ret=sendto(t->socket,p,size,MSG_DONTWAIT,
 			(struct sockaddr *)&t->addr.addr6,sizeof(t->addr.addr6));
 	if (ret<0){
 		if (config->debug) myperror("sendto");
 	}
 }
 
-void recv_icmp6(void){
+void recv_icmp6(struct target *t){
 int len,icmplen,datalen;
 char buf[1024];
 char abuf[100];
@@ -134,6 +134,7 @@
 struct iovec iov;
 struct msghdr msg;
 struct cmsghdr *c;
+reloophack6:
 
 	iov.iov_base=buf;
 	iov.iov_len=1000;
@@ -143,12 +144,13 @@
 	msg.msg_iovlen=1;
 	msg.msg_control=ans_data;
 	msg.msg_controllen=sizeof(ans_data);
-	len=recvmsg(icmp6_sock, &msg, MSG_DONTWAIT);
+	len=recvmsg(t->socket, &msg, MSG_DONTWAIT);
 #else
 socklen_t sl;
+reloophack6:
 
 	sl=sizeof(from);
-	len=recvfrom(icmp6_sock,buf,1024,0,(struct sockaddr *)&from,&sl);
+	len=recvfrom(t->socket,buf,1024,0,(struct sockaddr *)&from,&sl);
 #endif
 	if (len<0){
 		if (errno==EAGAIN) return;
@@ -170,7 +172,7 @@
 #endif
 	if (time_recvp==NULL){
 #ifdef SIOCGSTAMP
-		if (!ioctl(icmp6_sock, SIOCGSTAMP, &time_recv)){
+		if (!ioctl(t->socket, SIOCGSTAMP, &time_recv)){
 			debug("Got timestamp from ioctl()");
 		}else
 #endif
@@ -183,8 +185,11 @@
 	icmplen=len;
 	icmp=(struct icmp6_hdr *)buf;
 	if (icmp->icmp6_type != ICMP6_ECHO_REPLY) return;
-	if (icmp->icmp6_id != ident) return;
-
+	if (icmp->icmp6_id != ident){
+		debug("Alien echo-reply received from xxx. Expected %i, received %i", ident, icmp->icmp6_id);
+		goto reloophack6;
+		return;	
+	}
 	name=inet_ntop(AF_INET6,&from.sin6_addr,abuf,100);
 	debug("Ping reply from %s",name);
 	datalen=icmplen-sizeof(*icmp);
@@ -200,26 +205,29 @@
 }
 
 
-int make_icmp6_socket(void){
+int make_icmp6_socket(struct target *t){
 int opt;
 
-	icmp6_sock = socket(AF_INET6, SOCK_RAW, IPPROTO_ICMPV6);
-	if (icmp6_sock<0)
+	t->socket = socket(AF_INET6, SOCK_RAW, IPPROTO_ICMPV6);
+	if (t->socket <0)
 		myperror("socket");
 	else {
 		opt=2;
 #if defined(SOL_RAW) && defined(IPV6_CHECKSUM)
-		if (setsockopt(icmp6_sock, SOL_RAW, IPV6_CHECKSUM, &opt, sizeof(int)))
+		if (setsockopt(t->socket, SOL_RAW, IPV6_CHECKSUM, &opt, sizeof(int)))
 			myperror("setsockopt(IPV6_CHECKSUM)");
 #endif
 #ifdef SO_TIMESTAMP
 		opt=1;
-		if (setsockopt(icmp6_sock, SOL_SOCKET, SO_TIMESTAMP, &opt, sizeof(opt)))
+		if (setsockopt(t->socket, SOL_SOCKET, SO_TIMESTAMP, &opt, sizeof(opt)))
 			myperror("setsockopt(SO_TIMESTAMP)");
 #endif
 		/*install_filter6();*/
 	}
-	return icmp6_sock;
+	if (bind(t->socket, (struct sockaddr *)&t->ifaddr.addr6, sizeof(t->ifaddr.addr6)) < 0)
+		myperror("bind socket");
+
+	return t->socket;
 }
 
 #else /*HAVE_IPV6*/
@@ -233,8 +233,8 @@
 #else /*HAVE_IPV6*/
 #include "apinger.h"
 
-int make_icmp6_socket(void){ return -1; }
-void recv_icmp6(void){}
+int make_icmp6_socket(struct target *t){ return -1; }
+void recv_icmp6(struct target *t){}
 void send_icmp6_probe(struct target *t,int seq){}
 
 #endif /*HAVE_IPV6*/
